<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- ==== Use your actual package structure for groupId ==== -->
    <groupId>com.sjsu.flink</groupId>
    <artifactId>network-rails</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- ==== Set Flink version ==== -->
        <flink.version>1.20.1</flink.version>
        <!-- ==== Set Java version ==== -->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- ==== Use a consistent, safe log4j version ==== -->
        <log4j.version>2.17.1</log4j.version>
        <!-- ==== Add SLF4J API version property ==== -->
        <slf4j.version>1.7.36</slf4j.version> <!-- Or 2.0.x if preferred -->
         <!-- ==== Kafka Connector Version (Check Flink docs for compatibility with 1.20.1) ==== -->
        <flink.kafka.connector.version>3.3.0-1.20</flink.kafka.connector.version> <!-- Example - Verify this! -->
    </properties>

    <dependencies>
        <!-- Flink Core -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-clients</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Flink Table API -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java-bridge</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <!-- ==== Use planner-loader ==== -->
            <artifactId>flink-table-planner-loader</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-common</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Kafka Connector -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka</artifactId>
            <version>${flink.kafka.connector.version}</version>
            <!-- ==== Scope 'compile' needed for shading ==== -->
            <scope>compile</scope>
        </dependency>

        <!-- JSON Format -->
         <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-json</artifactId>
            <version>${flink.version}</version>
             <!-- ==== Scope 'compile' needed for shading ==== -->
            <scope>compile</scope>
        </dependency>

        <!-- Logging -->
        <!-- ==== Add SLF4J API (needed for compilation) ==== -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
             <!-- Scope 'compile' or 'provided'. 'compile' is safer if unsure. -->
             <scope>compile</scope>
        </dependency>

        <!-- Log4j2 Implementation (for runtime when shading) -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Java Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version> <!-- Or newer, e.g., 3.11.0 -->
                <configuration>
                    <!-- ==== Use properties for Java version ==== -->
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Fat JAR builder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version> <!-- Or newer, e.g., 3.5.1 -->
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <excludes>
                                    <!-- Exclude Flink's shaded dependencies to avoid conflicts -->
                                    <exclude>org.apache.flink:flink-shaded-*</exclude>
                                    <exclude>org.slf4j:slf4j-api</exclude> <!-- Exclude if cluster provides SLF4J -->
                                    <exclude>log4j:*</exclude> <!-- Exclude if cluster provides Log4j -->
                                    <exclude>com.google.code.findbugs:jsr305</exclude>
                                    <!-- Add other excludes if needed, e.g., org.apache.logging.log4j:* if cluster provides logging -->
                                </excludes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <!-- ==== Set correct main class ==== -->
                                    <mainClass>com.sjsu.flink.StreamingJob</mainClass>
                                </transformer>
                                <!-- Add ServicesResourceTransformer if needed for META-INF/services -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- Add Apache Notice/License transformer if desired -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                    <addHeader>false</addHeader> <!-- Avoids duplicate headers -->
                                </transformer>
                            </transformers>
                             <!-- Optional: Minimize JAR size -->
                             <minimizeJar>false</minimizeJar> <!-- Set to true to potentially reduce size, but can sometimes remove needed classes -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Add this plugin to copy the JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version> <!-- Use a recent version -->
                <executions>
                <execution>
                    <id>copy-jar-to-usrcode</id>
                    <phase>package</phase> <!-- Run after the JAR is created -->
                    <goals>
                    <goal>run</goal>
                    </goals>
                    <configuration>
                    <target>
                        <!-- Define the copy task -->
                        <copy file="${project.build.directory}/${project.build.finalName}.jar"
                            todir="${project.basedir}/src/usrcode" />
                        <echo>Copied ${project.build.finalName}.jar to ${project.basedir}/src/usrcode</echo>
                    </target>
                    </configuration>
                </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>